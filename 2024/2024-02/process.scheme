(define (safe-row-continue? single-row delta-min delta-max to-dampen)
        (if (eq? '() single-row) #t
        (if (eq? '() (cdr single-row)) #t
        (let ((delta (- (cadr single-row) (car single-row))))
        (if (or (< delta delta-min) (< delta-max delta))
            (if (not to-dampen) #f
                (safe-row-continue? (cons (car single-row) (cdr (cdr single-row))) delta-min delta-max #f))
        (if (safe-row-continue? (cdr single-row) delta-min delta-max to-dampen)
            #t
            (if (not to-dampen) #f
                (safe-row-continue? (cons (car single-row) (cdr (cdr single-row))) delta-min delta-max #f))))))))

(define (safe-row? single-row to-dampen)
        (if (< (length single-row) 2) #t
        (if (< (car single-row) (cadr single-row))
            (safe-row-continue? single-row 1 3 to-dampen)
            (safe-row-continue? single-row -3 -1 to-dampen))))

(unit-test (safe-row? '() #f) #t)
(unit-test (safe-row? '(1) #f) #t)
(unit-test (safe-row? '(1 1) #f) #f)
(unit-test (safe-row? '(1 2 3) #f) #t)
(unit-test (safe-row? '(3 2 1) #f) #t)

(unit-test (safe-row? '(7 6 4 2 1) #t) #t); Safe without removing any level.
(unit-test (safe-row? '(1 2 7 8 9) #t) #f); Unsafe regardless of which level is removed.
(unit-test (safe-row? '(9 7 6 2 1) #t) #f); Unsafe regardless of which level is removed.
(unit-test (safe-row? '(1 3 2 4 5) #t) #t); Safe by removing the second level, 3.
(unit-test (safe-row? '(8 6 4 4 1) #t) #t); Safe by removing the third level, 4.
(unit-test (safe-row? '(1 3 6 7 9) #t) #t); Safe without removing any level.

(define (count-safe-reports filename to-dampen)
        (apply + (map (lambda (x) (if (safe-row? x to-dampen) 1 0))
                      (get-number-lists filename))))

(unit-test (count-safe-reports "2024-02/input-test.txt" #f) 2)
(unit-test (count-safe-reports "2024-02/input.txt" #f) 524)
(unit-test (count-safe-reports "2024-02/input-test.txt" #t) 4)

; Don't know the right answer, but 553 is too low
(unit-test (count-safe-reports "2024-02/input.txt" #t) 554)

; (define (run-test) (count-safe-reports "2024-02/input.txt" #f)) ; Part 1
(define (run-test) (count-safe-reports "2024-02/input.txt" #t)) ; Part 2
