(define (read-file-to-list filename)
        (call-with-input-file
            filename
            (lambda (p)
                (let f ((x (read-line p)))
                       (if (eof-object? x)
                           '()
                           (cons x (f (read-line p))))))))

(define (unit-test actual expected)
        (if (equal? actual expected)
            (begin (display ".") (newline))
            (begin (display (string "Expected: " expected " Got: " actual )) (newline))))

(define (digit? char)
        (and (char<=? #\0 char) (char<=? char #\9)))

(define (number-length digits-already-found row-char-array)
        (cond ((eq? '() row-char-array) (list digits-already-found '()))
              ((digit? (car row-char-array))
               (number-length (+ 1 digits-already-found) (cdr row-char-array)))
              (else (list digits-already-found row-char-array))))

(unit-test (number-length 0 (string->list "")) '(0 ()))
(unit-test (number-length 0 '()) '(0 ()))
(unit-test (number-length 0 (string->list "5")) '(1 ()))
(unit-test (number-length 0 (string->list "5  ")) '(1 (#\space #\space)))


(define (sum-of-differences filename)
        0)


; Check using the sample
(unit-test (sum-of-differences "2024-01/input-test.txt") 11)

; Run real question. Returns ?
(define (run-test) (sum-of-differences "2024-01/input.txt" ))
